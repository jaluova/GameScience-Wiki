import{_ as a,c as o,a2 as l,o as c}from"./chunks/framework.Dinh2P0H.js";const m=JSON.parse('{"title":"Index 索引","description":"","frontmatter":{},"headers":[],"relativePath":"ez-index.md","filePath":"ez-index.md"}'),n={name:"ez-index.md"};function t(d,e,r,i,h,s){return c(),o("div",null,e[0]||(e[0]=[l('<h1 id="index-索引" tabindex="-1">Index 索引 <a class="header-anchor" href="#index-索引" aria-label="Permalink to &quot;Index 索引&quot;">​</a></h1><h2 id="challenge-1-try-easyx" tabindex="-1">Challenge 1 : Try EasyX <a class="header-anchor" href="#challenge-1-try-easyx" aria-label="Permalink to &quot;Challenge 1 : Try EasyX&quot;">​</a></h2><blockquote><p>EasyX 是一个<code>easy</code>的 tool <a href="./Challenge1.html">戳我跳转 🥳</a></p></blockquote><p>用一个<code>简洁(c1ear)</code>的<code>示例(examp1e)</code>,<code>简单(s1mple)</code>上手了 EasyX</p><blockquote><p><strong>start time</strong>: <code>Oct</code> <code>28</code> <code>2024</code> <code>Monday</code></p><p><strong>latest update</strong>: <code>Oct</code> <code>29</code> <code>2024</code> <code>Tuesday</code></p></blockquote><h2 id="challenge-2-basic-game-frame-work" tabindex="-1">Challenge 2 : Basic game frame work <a class="header-anchor" href="#challenge-2-basic-game-frame-work" aria-label="Permalink to &quot;Challenge 2 : Basic game frame work&quot;">​</a></h2><blockquote><p>好的游戏框架厘清了输入输出的逻辑 <a href="./Challenge2.html">戳我跳转 🥳</a></p></blockquote><blockquote><p><strong>start time</strong>: <code>Oct</code> <code>29</code> <code>2024</code> <code>Monday</code></p><p><strong>latest update</strong>: <code>Oct</code> <code>29</code> <code>2024</code> <code>Tuesday</code></p></blockquote><h2 id="challenge-3-dynamic-delay" tabindex="-1">Challenge 3 : Dynamic delay <a class="header-anchor" href="#challenge-3-dynamic-delay" aria-label="Permalink to &quot;Challenge 3 : Dynamic delay&quot;">​</a></h2><blockquote><p>动态延时是对设备性能的优化,更是对玩家体验的优化</p></blockquote><h2 id="challenge-4-image-rendering" tabindex="-1">Challenge 4 : Image rendering <a class="header-anchor" href="#challenge-4-image-rendering" aria-label="Permalink to &quot;Challenge 4 : Image rendering&quot;">​</a></h2><blockquote><p>画面是人们对游戏的第一印象</p></blockquote><h2 id="challenge-5-random-enemy" tabindex="-1">Challenge 5 : Random enemy <a class="header-anchor" href="#challenge-5-random-enemy" aria-label="Permalink to &quot;Challenge 5 : Random enemy&quot;">​</a></h2><blockquote><p>增添游戏性的一小步</p></blockquote><h2 id="challenge-6-music-sound" tabindex="-1">Challenge 6 : Music &amp; sound <a class="header-anchor" href="#challenge-6-music-sound" aria-label="Permalink to &quot;Challenge 6 : Music &amp; sound&quot;">​</a></h2><blockquote><p>增添交互感与沉浸感的重要方式</p></blockquote><h2 id="challenge-7-collision-detection" tabindex="-1">Challenge 7 : Collision detection <a class="header-anchor" href="#challenge-7-collision-detection" aria-label="Permalink to &quot;Challenge 7 : Collision detection&quot;">​</a></h2><blockquote><p>游戏性与机能的权衡取舍</p></blockquote>',18)]))}const u=a(n,[["render",t]]);export{m as __pageData,u as default};
